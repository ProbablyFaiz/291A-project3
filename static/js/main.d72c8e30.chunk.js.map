{"version":3,"sources":["components/Compose.js","components/LoginForm.js","components/MessageList.js","components/UserList.js","App.js","reportWebVitals.js","index.js"],"names":["Compose","props","state","url","message","token","formText","handleChange","bind","save","event","this","setState","target","value","preventDefault","formData","FormData","append","console","log","fetch","method","headers","Headers","mode","body","then","response","ok","json","Error","status","data","catch","error","requestFailed","id","className","onSubmit","type","onChange","Component","LoginForm","username","password","URLSearchParams","toString","saveToken","loggedIn","startStream","MessageList","displayMessages","messages","prevProps","messageList","map","m","index","UserList","displayUsers","users","userList","u","App","sessionStorage","displayUsersMessages","displayLogin","accessToken","addUser","deleteUser","formatDate","userToAdd","filter","user","length","prevState","concat","userToDelete","timestamp","t","Date","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","eventSource","EventSource","addEventListener","close","JSON","parse","readyState","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d72c8e30.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport '../css/Compose.css';\n\nclass Compose extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      url : props.url,\n      message: \"\",\n      token: props.token,\n      formText: \"\"\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  handleChange (event) {\n    this.setState({message: event.target.value});\n  }\n\n  save (event) {\n    event.preventDefault();\n\n    var formData = new FormData();\n    formData.append('message', this.state.message);\n\n    this.setState({token: this.props.token});\n\n    console.log(\"compose save token: \" + this.state.token);\n\n    fetch(/*proxyurl + */this.state.url + '/message', { //todo: change url to website\n     method: 'POST',\n     headers: new Headers({'Authorization': 'Bearer ' + this.state.token}),\n     mode: 'cors',\n     body: formData\n    }).then((response) => {\n      if(!response.ok) throw new Error(response.status);\n      else return response.json();\n    })\n    .then((data) => {\n      console.log(\"message sent successfully\");\n    })\n    .catch((error) => {\n      console.log('error: ' + error);\n      this.setState({ requestFailed: true });\n    });\n\n    this.setState({message: \"\"});\n  }\n\n  render() {\n    return (\n      <div id=\"compose\">\n        <form className=\"message\" onSubmit={this.save}>\n          <input id=\"messageText\" type=\"text\" value={this.state.message} onChange={this.handleChange}/>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Compose;","import React, { Component } from \"react\";\n\nclass LoginForm extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      url : props.url,\n      username : \"\",\n      password : \"\"\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n\n  handleChange(event) {\n    if (event.target.id === \"username\") {\n      this.setState({username: event.target.value});\n    }\n    else if (event.target.id === \"password\") {\n      this.setState({password: event.target.value});\n    }\n  }\n\n  save(event) {\n    //const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    //var formData = new FormData();\n    var formData = new URLSearchParams();\n    formData.append('username', this.state.username);\n    formData.append('password', this.state.password);\n\n    event.preventDefault();\n\n\n    fetch(/*proxyurl + */this.state.url + '/login', { //todo: change url to website\n     method: 'POST',\n     headers: {'Content-Type':'application/x-www-form-urlencoded'},\n     mode: 'cors',\n     body: formData.toString()\n    }).then((response) => {\n      if(!response.ok) throw new Error(response.status);\n      else return response.json();\n    })\n    .then((data) => {\n      this.props.saveToken(data[\"token\"]);\n      this.props.loggedIn();\n      this.props.startStream();\n    })\n    .catch((error) => {\n      console.log('error: ' + error);\n      this.setState({ requestFailed: true });\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"login\">\n        <div>\n          <h2>Login</h2>\n          <form method=\"post\" onSubmit={this.save}>\n              <label>Username <br /><input id=\"username\" type=\"text\" onChange={this.handleChange}/></label>\n              <br />\n              <label>Password <br /><input id=\"password\" type=\"password\" onChange={this.handleChange}/></label>\n              <br />\n              <button type=\"submit\">Submit</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;","import React, { Component } from \"react\";\nimport '../css/MessageList.css';\n\nclass MessageList extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      displayMessages : props.displayMessages,\n      messages: props.messages\n    }\n  }\n\n  componentDidUpdate(prevProps){\n    if (this.props.displayMessages !== prevProps.displayMessages) {\n      this.setState({displayMessages : this.props.displayMessages});\n    }\n    if (this.props.messages !== prevProps.messages) {\n      this.setState({messages : this.props.messages});\n    }\n  }\n\n  render() {\n    let messageList;\n    if (this.state.displayMessages) {\n      messageList = this.state.messages.map((m, index) => <ul key={index}>{m}</ul>);\n    }\n    return (\n      <div className=\"messageList\">\n        <p>Messages</p>\n        {messageList}\n      </div>\n    );\n  }\n}\n\nexport default MessageList;","import React, { Component } from \"react\";\nimport '../css/UserList.css';\nclass UserList extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      displayUsers : props.displayUsers,\n      users : props.users\n    }\n  }\n\n  componentDidUpdate(prevProps){\n    if (this.props.displayUsers !== prevProps.displayUsers) {\n      this.setState({displayUsers : this.props.displayUsers});\n    }\n    if (this.props.users !== prevProps.users) {\n      this.setState({users : this.props.users});\n    }\n  }\n\n  render() {\n    let userList;\n    if (this.state.displayUsers) {\n      userList = this.state.users.map((u, index) => <ul key={index}>{u}</ul>);\n    }\n    return (\n      <div className=\"userList\">\n        <p>Online</p>\n        {userList}\n      </div>\n    );\n  }\n}\n\nexport default UserList;","import React, { Component } from \"react\";\nimport './css/App.css';\nimport Compose from \"./components/Compose.js\";\nimport LoginForm from \"./components/LoginForm.js\";\nimport MessageList from \"./components/MessageList.js\";\nimport UserList from \"./components/UserList.js\";\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n\t    url : sessionStorage.url || \"http://droplet.faizsurani.com\",\n      messages : [],\n      users : [],\n      displayUsersMessages : false,\n      displayLogin : true,\n      token : sessionStorage.accessToken || \"\"\n    }\n    this.addUser = this.addUser.bind(this);\n    this.deleteUser = this.deleteUser.bind(this);\n    this.formatDate = this.formatDate.bind(this);\n    this.loggedIn = this.loggedIn.bind(this);\n    this.saveToken = this.saveToken.bind(this);\n    this.startStream = this.startStream.bind(this);\n  }\n\n  addUser(userToAdd){\n    if (!(this.state.users.filter(user => user === userToAdd).length > 0)) {\n      this.setState(prevState => ({users: prevState.users.concat(userToAdd)}));\n    }\n  }\n\n  deleteUser(userToDelete){\n      this.setState(prevState => ({\n          users: prevState.users.filter(user => user !== userToDelete )\n      }));\n  }\n\n  formatDate(timestamp){\n    let t = new Date(timestamp*1000);\n    let formatted = new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(t);\n    return formatted;\n  }\n\n  loggedIn(){\n    this.setState({displayLogin : false});\n    this.setState({displayUsersMessages : true});\n  }\n\n  saveToken(token){\n    sessionStorage.accessToken = token;\n    this.setState({token: token});\n  }\n\n  startStream() {\n    this.eventSource = new EventSource(this.state.url + \"/stream/\" + sessionStorage.accessToken);\n\n    this.eventSource.addEventListener(\n        \"Disconnect\",\n        (event) => {\n            this.eventSource.close();\n            //todo: delete user from list?\n            delete sessionStorage.accessToken;\n            this.setState({displayLogin : true});\n            this.setState({displayUsersMessages : false});\n        },\n        false\n    );\n\n    this.eventSource.addEventListener(\n        \"Join\",\n        (event) => {\n            var data = JSON.parse(event.data);\n            this.addUser(data.user);\n            this.setState(prevState => ({messages: prevState.messages.concat(this.formatDate(data[\"created\"]) + \" JOIN: \" + data.user)}));\n        },\n        false\n    );\n\n    this.eventSource.addEventListener(\n        \"Message\",\n        (event) => {\n            var data = JSON.parse(event.data);\n            this.setState(prevState => ({messages: prevState.messages.concat(this.formatDate(data[\"created\"]) + \" (\" + data.user + \") \" + data.message)}));\n        },\n        false\n    );\n\n    this.eventSource.addEventListener(\n        \"Part\",\n        (event) => {\n            var data = JSON.parse(event.data);\n            this.deleteUser(data.user);\n            this.setState(prevState => ({messages: prevState.messages.concat(this.formatDate(data[\"created\"]) + \" PART: \" + data.user)}));\n        },\n        false\n    );\n\n    this.eventSource.addEventListener(\n        \"ServerStatus\",\n        (event) => {\n            var data = JSON.parse(event.data);\n            this.setState(prevState => ({messages: prevState.messages.concat(this.formatDate(data[\"created\"]) + \" STATUS: \" + data.status)}));\n        },\n        false\n    );\n\n    this.eventSource.addEventListener(\n        \"Users\",\n        (event) => {\n            this.setState({displayLogin : false});\n            this.setState({displayUsersMessages : true});\n            this.setState({users:JSON.parse(event.data).users});\n        },\n        false\n    );\n\n    this.eventSource.addEventListener(\n        \"error\",\n        (event) => {\n            //todo: delete user from list?\n            this.setState({displayUsersMessages : false});\n            if (event.target.readyState === 2) {\n                delete sessionStorage.accessToken;\n                this.setState({displayLogin : true});\n            } else {\n                console.log(\"Disconnected, retrying\");\n            }\n        },\n        false\n    );\n  }\n\n\n  render() {\n    if (this.state.displayLogin)\n    {\n      return (<div className=\"App\">\n                <br />\n                <h3> Disconnected. </h3>\n                <br/>\n                <LoginForm url = {this.state.url} loggedIn = {this.loggedIn} saveToken = {this.saveToken} startStream = {this.startStream}/>\n              </div>);\n    }\n    return (\n      <div className=\"App\">\n        <br />\n        <h3> Connected. </h3>\n        <br/>\n        <div className = \"lists\">\n          <div class=\"col-9\">\n            <MessageList displayMessages = {this.state.displayUsersMessages} messages={this.state.messages}/>\n          </div>\n          <div class=\"col-3\">\n            <UserList displayUsers = {this.state.displayUsersMessages} users={this.state.users}/>\n          </div>\n        </div>\n        <hr />\n        <Compose url = {this.state.url} token = {this.state.token}/>\n        <br /> <br />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}