{"version":3,"sources":["components/Compose.js","components/LoginForm.js","components/MessageList.js","components/UserList.js","App.js","reportWebVitals.js","index.js"],"names":["Compose","props","state","url","message","token","typeable","formText","handleChange","bind","save","event","this","setState","target","value","preventDefault","formData","FormData","append","console","log","fetch","method","headers","Headers","mode","body","then","response","ok","json","Error","status","data","catch","error","requestFailed","prevProps","id","className","onSubmit","type","onChange","disabled","Component","LoginForm","username","password","URLSearchParams","toString","saveToken","saveURL","loggedIn","startStream","MessageList","displayMessages","messages","messageList","map","m","index","UserList","displayUsers","users","userList","u","App","sessionStorage","displayLogin","reconnecting","accessToken","addUser","deleteUser","formatDate","userToAdd","filter","user","length","prevState","concat","userToDelete","timestamp","t","Date","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","eventSource","EventSource","addEventListener","close","JSON","parse","readyState","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0f10ced.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport '../css/Compose.css';\n\nclass Compose extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      url : props.url,\n      message: \"\",\n      token: props.token,\n      typeable: props.typeable,\n      formText: \"\"\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  handleChange (event) {\n    this.setState({message: event.target.value});\n  }\n\n  save (event) {\n    event.preventDefault();\n\n    var formData = new FormData();\n    formData.append('message', this.state.message);\n\n    this.setState({token: this.props.token});\n\n    console.log(\"compose save token: \" + this.state.token);\n\n    fetch(/*proxyurl + */this.state.url + '/message', { //todo: change url to website\n     method: 'POST',\n     headers: new Headers({'Authorization': 'Bearer ' + this.state.token}),\n     mode: 'cors',\n     body: formData\n    }).then((response) => {\n      if(!response.ok) throw new Error(response.status);\n      else return response.json();\n    })\n    .then((data) => {\n    })\n    .catch((error) => {\n      this.setState({ requestFailed: true });\n    });\n\n    this.setState({message: \"\"});\n  }\n\n  componentDidUpdate(prevProps){\n    if (this.props.typeable !== prevProps.typeable) {\n      this.setState({typeable: this.props.typeable});\n    }\n  }\n\n  render() {\n    if (this.state.typeable) {\n      return (\n        <div id=\"compose\">\n          <form className=\"message\" onSubmit={this.save}>\n            <input id=\"messageText\" type=\"text\" value={this.state.message} onChange={this.handleChange}/>\n          </form>\n        </div>\n      );\n    }\n    return (\n      <div id=\"compose\">\n        <form className=\"message\">\n          <input id=\"messageText\" type=\"text\" value=\"Please reconnect to type a message.\" disabled =\"disabled\"/>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Compose;","import React, { Component } from \"react\";\n\nclass LoginForm extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      url : \"\",\n      username : \"\",\n      password : \"\",\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n\n  handleChange(event) {\n    if (event.target.id === \"username\") {\n      this.setState({username: event.target.value});\n    }\n    else if (event.target.id === \"password\") {\n      this.setState({password: event.target.value});\n    }\n    else if (event.target.id === \"url\") {\n      this.setState({url: event.target.value});\n    }\n  }\n\n  save(event) {\n    //const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    //var formData = new FormData();\n    var formData = new URLSearchParams();\n    formData.append('username', this.state.username);\n    formData.append('password', this.state.password);\n\n    event.preventDefault();\n\n\n    fetch(/*proxyurl + */this.state.url + '/login', { //todo: change url to website\n     method: 'POST',\n     headers: {'Content-Type':'application/x-www-form-urlencoded'},\n     mode: 'cors',\n     body: formData.toString()\n    }).then((response) => {\n      if(!response.ok) throw new Error(response.status);\n      else return response.json();\n    })\n    .then((data) => {\n      console.log(\"test\");\n      this.props.saveToken(data[\"token\"]);\n      this.props.saveURL(this.state.url);\n      this.props.loggedIn();\n      this.props.startStream();\n    })\n    .catch((error) => {\n      this.setState({ requestFailed: true });\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"login\">\n        <div>\n          <h2>Login</h2>\n          <form method=\"post\" onSubmit={this.save}>\n              <label>URL <br /><input id=\"url\" type=\"text\" onChange={this.handleChange}/></label>\n              <br />\n              <label>Username <br /><input id=\"username\" type=\"text\" onChange={this.handleChange}/></label>\n              <br />\n              <label>Password <br /><input id=\"password\" type=\"password\" onChange={this.handleChange}/></label>\n              <br />\n              <button type=\"submit\">Submit</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;","import React, { Component } from \"react\";\nimport '../css/MessageList.css';\n\nclass MessageList extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      displayMessages : props.displayMessages,\n      messages: props.messages\n    }\n  }\n\n  componentDidUpdate(prevProps){\n    if (this.props.displayMessages !== prevProps.displayMessages) {\n      this.setState({displayMessages : this.props.displayMessages});\n    }\n    if (this.props.messages !== prevProps.messages) {\n      this.setState({messages : this.props.messages});\n    }\n  }\n\n  render() {\n    let messageList;\n    if (this.state.displayMessages) {\n      messageList = this.state.messages.map((m, index) => <ul key={index}>{m}</ul>);\n    }\n    return (\n      <div className=\"messageList\">\n        <p>Messages</p>\n        {messageList}\n      </div>\n    );\n  }\n}\n\nexport default MessageList;","import React, { Component } from \"react\";\nimport '../css/UserList.css';\nclass UserList extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      displayUsers : props.displayUsers,\n      users : props.users\n    }\n  }\n\n  componentDidUpdate(prevProps){\n    if (this.props.displayUsers !== prevProps.displayUsers) {\n      this.setState({displayUsers : this.props.displayUsers});\n    }\n    if (this.props.users !== prevProps.users) {\n      this.setState({users : this.props.users});\n    }\n  }\n\n  render() {\n    let userList;\n    if (this.state.displayUsers) {\n      userList = this.state.users.map((u, index) => <ul key={index}>{u}</ul>);\n    }\n    return (\n      <div className=\"userList\">\n        <p>Online</p>\n        {userList}\n      </div>\n    );\n  }\n}\n\nexport default UserList;","import React, { Component } from \"react\";\nimport './css/App.css';\nimport Compose from \"./components/Compose.js\";\nimport LoginForm from \"./components/LoginForm.js\";\nimport MessageList from \"./components/MessageList.js\";\nimport UserList from \"./components/UserList.js\";\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      url : sessionStorage.url || \"https://chat.cs291.com\",\n      messages : [],\n      users : [],\n      displayUsers : false,\n      displayMessages : false,\n      displayLogin : true,\n      reconnecting : false,\n      token : sessionStorage.accessToken || \"\"\n    }\n    this.addUser = this.addUser.bind(this);\n    this.deleteUser = this.deleteUser.bind(this);\n    this.formatDate = this.formatDate.bind(this);\n    this.loggedIn = this.loggedIn.bind(this);\n    this.saveToken = this.saveToken.bind(this);\n    this.saveURL = this.saveURL.bind(this);\n    this.startStream = this.startStream.bind(this);\n  }\n\n  addUser(userToAdd){\n    if (!(this.state.users.filter(user => user === userToAdd).length > 0)) {\n      this.setState(prevState => ({users: prevState.users.concat(userToAdd)}));\n    }\n  }\n\n  deleteUser(userToDelete){\n      this.setState(prevState => ({\n          users: prevState.users.filter(user => user !== userToDelete )\n      }));\n  }\n\n  formatDate(timestamp){\n    let t = new Date(timestamp*1000);\n    let formatted = new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(t);\n    return formatted;\n  }\n\n  loggedIn(){\n    this.setState({displayLogin : false});\n    this.setState({displayUsers : true});\n    this.setState({displayMessages : true});\n  }\n\n  saveToken(token){\n    sessionStorage.accessToken = token;\n    this.setState({token: token});\n  }\n\n  saveURL(url){\n    this.setState({url: url});\n  }\n\n  startStream() {\n    this.eventSource = new EventSource(this.state.url + \"/stream/\" + sessionStorage.accessToken);\n\n    this.eventSource.addEventListener(\n        \"Disconnect\",\n        (event) => {\n            console.log(\"test disconnect\");\n            this.eventSource.close();\n            //todo: delete user from list?\n            delete sessionStorage.accessToken;\n            this.setState({displayLogin : true});\n            this.setState({displayUsers : false});\n            this.setState({displayMessages : false});\n        },\n        false\n    );\n\n    this.eventSource.addEventListener(\n        \"Join\",\n        (event) => {\n            this.setState({reconnecting : false});\n            this.setState({displayUsers : true});\n            var data = JSON.parse(event.data);\n            this.addUser(data.user);\n            this.setState(prevState => ({messages: prevState.messages.concat(this.formatDate(data[\"created\"]) + \" JOIN: \" + data.user)}));\n        },\n        false\n    );\n\n    this.eventSource.addEventListener(\n        \"Message\",\n        (event) => {\n            this.setState({reconnecting : false});\n            this.setState({displayUsers : true});\n            var data = JSON.parse(event.data);\n            this.setState(prevState => ({messages: prevState.messages.concat(this.formatDate(data[\"created\"]) + \" (\" + data.user + \") \" + data.message)}));\n        },\n        false\n    );\n\n    this.eventSource.addEventListener(\n        \"Part\",\n        (event) => {\n            this.setState({reconnecting : false});\n            this.setState({displayUsers : true});\n            var data = JSON.parse(event.data);\n            this.deleteUser(data.user);\n            this.setState(prevState => ({messages: prevState.messages.concat(this.formatDate(data[\"created\"]) + \" PART: \" + data.user)}));\n        },\n        false\n    );\n\n    this.eventSource.addEventListener(\n        \"ServerStatus\",\n        (event) => {\n            this.setState({reconnecting : false});\n            this.setState({displayUsers : true});\n            var data = JSON.parse(event.data);\n            this.setState(prevState => ({messages: prevState.messages.concat(this.formatDate(data[\"created\"]) + \" STATUS: \" + data.status)}));\n        },\n        false\n    );\n\n    this.eventSource.addEventListener(\n        \"Users\",\n        (event) => {\n            this.setState({displayLogin : false});\n            this.setState({displayUsers : true});\n            this.setState({displayMessages : true});\n            this.setState({reconnecting : false});\n            this.setState({users:JSON.parse(event.data).users});\n        },\n        false\n    );\n\n    this.eventSource.addEventListener(\n        \"error\",\n        (event) => {\n            //todo: delete user from list?\n            this.setState({reconnecting : true});\n            this.setState({displayUsers : false});\n            if (event.target.readyState === 2) {\n                delete sessionStorage.accessToken;\n                this.setState({displayLogin : true});\n            } else {\n                console.log(\"Disconnected, retrying\");\n            }\n        },\n        false\n    );\n  }\n\n\n  render() {\n    if (this.state.displayLogin)\n    {\n      return (<div className=\"App\">\n                <br />\n                <h3> Disconnected. </h3>\n                <br/>\n                <LoginForm loggedIn = {this.loggedIn} saveToken = {this.saveToken} saveURL = {this.saveURL} startStream = {this.startStream}/>\n              </div>);\n    }\n    else if (this.state.reconnecting)\n    {\n      return (\n      <div className=\"App\">\n        <br />\n        <h3> Disconnected, retrying </h3>\n        <br/>\n        <div className = \"lists\">\n          <div class=\"col-9\">\n            <MessageList displayMessages = {this.state.displayMessages} messages={this.state.messages}/>\n          </div>\n          <div class=\"col-3\">\n            <UserList displayUsers = {this.state.displayUsers} users={this.state.users}/>\n          </div>\n        </div>\n        <hr />\n        <Compose url={this.state.url} token={this.state.token} typeable = {false}/>\n        <br /> <br />\n      </div>\n    );\n    }\n    return (\n      <div className=\"App\">\n        <br />\n        <h3> Connected. </h3>\n        <br/>\n        <div className = \"lists\">\n          <div class=\"col-9\">\n            <MessageList displayMessages = {this.state.displayMessages} messages={this.state.messages}/>\n          </div>\n          <div class=\"col-3\">\n            <UserList displayUsers = {this.state.displayUsers} users={this.state.users}/>\n          </div>\n        </div>\n        <hr />\n        <Compose url={this.state.url} token={this.state.token} typeable={true}/>\n        <br /> <br />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}